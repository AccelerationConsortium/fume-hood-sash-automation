[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "hood-sash-automation"
version = "0.3.0"
authors = [
    { name = "Yang Cao", email = "cyrilcaoyang@gmail.com" },
    { name = "Kelvin Chow", email = "kelvinchow223@gmail.com" },
]
description = "A package to control a fume hood sash actuator and sensor."
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = ["Flask", "PyYAML", "Flask-SocketIO", "Flask-CORS"]

[project.optional-dependencies]
sensor = []
actuator = ["smbus2"]
test = [
    "pytest", 
    "pytest-mock", 
    "pytest-cov", 
    "pytest-asyncio",
    "requests",
    "coverage",
    "pylint",
    "bandit"
]
rpi_hardware = ["RPi.GPIO"]

[project.urls]
"Homepage" = "https://github.com/your-username/fume-hood-sash-automation"
"Bug Tracker" = "https://github.com/your-username/fume-hood-sash-automation/issues"

[project.scripts]
hood_sash_automation_actuator = "hood_sash_automation.api.api_service:main"
hood_sash_automation_sensor = "hood_sash_automation.sensor.api_service:main"
hood_sash_automation_enhanced = "hood_sash_automation.api.enhanced_api_service:main"

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests/docker-test/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--disable-warnings"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow running tests"
]

# Coverage configuration
[tool.coverage.run]
source = ["src/hood_sash_automation"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

# Linting configuration
[tool.pylint.messages_control]
disable = [
    "import-error",
    "no-member",
    "too-few-public-methods",
    "missing-docstring"
]

[tool.pylint.format]
max-line-length = 100
